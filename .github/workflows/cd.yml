name: Build and Push Docker Image

on:
  push:
    branches: [Main]
  pull_request:
    branches: [Main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Set up Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      - name: Start services
        run: sudo docker-compose up -d --build

      - name: Run tests
        run: go test ./...

      - name: Write config file from base64
        run: |
          mkdir -p config
          echo "$DOCKER_CONFIG_YAML" | base64 -d > config/docker.yaml
        env:
          DOCKER_CONFIG_YAML: ${{ secrets.DOCKER_CONFIG_YAML }}

      - name: Build Docker image
        run: docker build --build-arg DOCKER_CONFIG_PATH=config/docker.yaml -t varunarora1606/probo:${{ github.sha }} . 

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Image
        run: docker push varunarora1606/probo:${{ github.sha }}

      - name: Deploy to EC2
        run: |

          # Set up SSH key
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add EC2 host to known_hosts to prevent SSH prompt
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

          # SSH into EC2 and manage Docker container
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Pull the latest Docker image with the commit hash tag
            echo "Pulling Docker image: varunarora1606/probo:${{ github.sha }}"
            sudo docker pull varunarora1606/probo:${{ github.sha }}

            # # Stop and remove the existing container if it exists
            # sudo echo "Stopping and removing existing container 'probo' if any..."
            # sudo docker stop probo || true
            # sudo docker rm probo || true

            # # Run the new container in detached mode
            # echo "Starting new container 'probo' with commit tag: ${GITHUB_SHA}"
            # sudo docker run -d --restart always --name probo -e CONFIG_PATH=app/config/docker.yaml -p 8000:8000 varunarora1606/probo:${{ github.sha }}

            echo "Recreating services with docker-compose..."
            export GITHUB_SHA=${{ github.sha }}
            sudo docker-compose down
            sudo docker-compose up -d
          EOF
