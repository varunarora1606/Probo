name: Build and Push Docker Image

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
            path: |
                ~/.cache/go-build
                ~/go/pkg/mod
            key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
            restore-keys: |
                ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Start services
        run: docker-compose up -d --build
      
      - name: Run tests
        run: go test ./...
      
      - name: Build Docker image
        run: docker build -t varunarora1606/probo:${{ github.sha }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Image
        run: docker push varunarora1606/probo:${{ github.sha }}

      - name: Deploy to EC2 
        run: |
          # Install SSH client if not already installed
          sudo apt-get install -y openssh-client

          # Set up SSH key
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Add EC2 host to known_hosts to prevent SSH prompt
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

          # SSH into EC2 and manage Docker container
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Pull the latest Docker image with the commit hash tag
            echo "Pulling Docker image: varunarora1606/probo:${{ github.sha }}"
            docker pull varunarora1606/probo:${{ github.sha }}

            # Stop and remove the existing container if it exists
            echo "Stopping and removing existing container 'probo' if any..."
            docker stop probo || true
            docker rm probo || true

            # Run the new container in detached mode
            echo "Starting new container 'probo' with commit tag: ${GITHUB_SHA}"
            docker run -d --restart always --name probo -p 8000:8000 varunarora1606/probo:${{ github.sha }}
          EOF

